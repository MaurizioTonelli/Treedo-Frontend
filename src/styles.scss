// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

$custom-display-4: mat.define-typography-level(
  $font-family: Offside,
  $font-weight: 400,
  $font-size: 112px,
);
$custom-display-3: mat.define-typography-level(
  $font-family: Offside,
  $font-weight: 400,
  $font-size: 56px,
);
$custom-display-2: mat.define-typography-level(
  $font-family: Offside,
  $font-weight: 400,
  $font-size: 45px,
);
$custom-display-1: mat.define-typography-level(
  $font-family: Offside,
  $font-weight: 400,
  $font-size: 34px,
);
$custom-headline: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 28px,
);
$custom-title: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 24px,
);
$custom-subheading-2: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 20px,
);
$custom-subheading-1: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 20px,
);
$custom-body-1: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 200,
  $font-size: 1em,
);
$custom-body-2: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 600,
  $font-size: 1em,
);
$custom-caption: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 300,
  $font-size: 10px,
);
$custom-button: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 1em,
);
$custom-input: mat.define-typography-level(
  $font-family: Ubuntu,
  $font-weight: 400,
  $font-size: 1em,
);

$custom-typography-config: mat.define-typography-config(
  $display-4: $custom-display-4,
  $display-3: $custom-display-3,
  $display-2: $custom-display-2,
  $display-1: $custom-display-1,
  $headline: $custom-headline,
  $title: $custom-title,
  $subheading-2: $custom-subheading-2,
  $subheading-1: $custom-subheading-1,
  $body-1: $custom-body-1,
  $body-2: $custom-body-2,
  $caption: $custom-caption,
  $button: $custom-button,
  $input: $custom-input,
);

@include mat.core($custom-typography-config);

$green-colors-palette: (
  50: #accabe,
  100: #99c9b5,
  200: #7fc8a9,
  300: #67c79f,
  400: #60c59b,
  500: #40c58e,
  600: #28ca87,
  700: #1dca82,
  800: #11c479,
  900: #08c777,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$orange-colors-palette: (
  50: #fac474,
  100: #f8b857,
  200: #f7a833,
  300: #f89d15,
  400: #fa9600,
  500: #d38003,
  600: #b46d03,
  700: #814f03,
  800: #774801,
  900: #5a3600,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$warning-colors-palette: (
  50: #d49d9a,
  100: #ce7a76,
  200: #d3615a,
  300: #d3615a,
  400: #d1463f,
  500: #cf3128,
  600: #d12b22,
  700: #cf1f16,
  800: #ca0f05,
  900: #a50c04,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$treedo-frontend-primary: mat.define-palette(
  $green-colors-palette,
  300,
  100,
  500
);
$treedo-frontend-accent: mat.define-palette(
  $orange-colors-palette,
  300,
  100,
  500
);

// The warn palette is optional (defaults to red).
$treedo-frontend-warn: mat.define-palette($warning-colors-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$treedo-frontend-theme: mat.define-light-theme(
  (
    color: (
      primary: $treedo-frontend-primary,
      accent: $treedo-frontend-accent,
      warn: $treedo-frontend-warn,
    ),
  )
);

$treedo-frontend-theme-dark: mat.define-dark-theme(
  (
    color: (
      primary: $treedo-frontend-primary,
      accent: $treedo-frontend-warn,
      warn: $treedo-frontend-accent,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($treedo-frontend-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
.dark {
  @include mat.all-component-colors($treedo-frontend-theme-dark);
}
